#BlueJ class context
comment0.target=PitneyNguyenNguyen
comment0.text=\n\ PitneyNguyenNguyen\ object.\ Students\ will\ extend\ this\ class\n\ and\ override\ the\ getNextMove\ method\n\ \n\ @author\ Mr.\ Jaffe\n\ @version\ 1.0\n
comment1.params=color
comment1.target=PitneyNguyenNguyen(int)
comment1.text=\n\ PitneyNguyenNguyen\ constructor\n\ @param\ color\ \ \ One\ of\ Constants.WHITE\ or\ Constants.BLACK\n
comment10.params=board
comment10.target=java.util.ArrayList\ getOpponentLegalMoves(Board)
comment11.params=p
comment11.target=boolean\ isThisPlayer(PitneyNguyenNguyen)
comment11.text=\n\ Are\ this\ player\ and\ the\ passed-in\ player\ the\ same?\n\ @param\ p\ Passed-in\ player\n\ @return\ true\ if\ the\ players\ are\ the\ same\n
comment12.params=p
comment12.target=boolean\ isThisPlayer(int)
comment12.text=\n\ Are\ this\ color\ and\ the\ passed-in\ color\ the\ same?\n\ @param\ p\ Passed-in\ color\ (represented\ as\ an\ integer)\n\ @return\ true\ if\ the\ colors\ (integers)\ are\ the\ same\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment14.params=board\ position\ direction\ count
comment14.target=boolean\ step(Board,\ Position,\ Position,\ int)
comment15.params=board\ positionToCheck
comment15.target=boolean\ isLegalMove(Board,\ Position)
comment16.params=board
comment16.target=java.util.ArrayList\ getLegalMoves(Board)
comment16.text=\n\ Get\ the\ legal\ moves\ for\ this\ player\ on\ the\ board\n\ @param\ board\n\ @return\ True\ if\ this\ is\ a\ legal\ move\ for\ the\ player\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\n\ Gets\ the\ player\ name\n\ @return\ \ \ \ \ \ \ \ PitneyNguyenNguyen\ name\n
comment3.params=board
comment3.target=Position\ getNextMove(Board)
comment3.text=\n\ The\ player\ must\ override\ getNextMove\n\ @param\ board\ Game\ board\n\ @return\ A\ position\ coordinate\ pair\ of\ his/her\ next\ move.\ Returns\ null\n\ \ \ \ \ \ \ \ \ \ if\ no\ move\ is\ available\n
comment4.params=board\ position\ alpha\ beta
comment4.target=boolean\ evaluation(Board,\ Position,\ int,\ int)
comment5.params=board\ position\ depth\ alpha\ beta\ maximizingPlayer
comment5.target=int\ minimax(Board,\ Position,\ int,\ int,\ int,\ boolean)
comment6.params=board\ move
comment6.target=int\ assessMove(Board,\ Position)
comment7.params=board\ move
comment7.target=int\ calculateBoardControl(Board,\ Position)
comment8.params=board\ move
comment8.target=int\ countFlippedDiscs(Board,\ Position)
comment9.params=board
comment9.target=java.util.ArrayList\ getOpponentPositions(Board)
numComments=17
